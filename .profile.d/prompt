# Prompt

function parse_git_branch {
	a=$(git symbolic-ref HEAD 2> /dev/null) || return
	git_status=$(git status 2> /dev/null)
	if [[ "$git_status" =~ .*"not staged for commit".* ]]; then
		echo -e "\033[1;93m (${a#refs/heads/})"
	elif [[ "$git_status" =~ .*"to be committed".* ]]; then
		echo -e "\033[1;31m (${a#refs/heads/})"
	else
		echo -e "\033[1;32m (${a#refs/heads/})"
	
	fi
}

BLACK="\[\033[1;30m\]"
RED="\[\033[1;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[1;32m\]"
BLUE="\[\033[1;34m\]"
GREY="\[\033[0;37m\]"
WHITE="\[\033[1;37m\]"
TURQUOISE="\[\033[1;96m\]"
RED="\[\033[1;91m\]"
YELLOW="\[\033[1;93m\]"
PINK="\[\033[1;95m\]"
BLUE="\[\033[1;94m\]"
WHITE="\[\033[1;97m\]"
END="\[\e[0m\]"
export PS1="[$WHITE\u$YELLOW@$WHITE\h$END] \w\[\$(parse_git_branch)\] $END$ $END"
